{"version":3,"file":"workbox-3264f754.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/NetworkOnly.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    void self.skipWaiting();\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n"],"names":["self","_","e","logger","globalThis","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","invalid-value","paramName","validValueDescription","value","Error","JSON","stringify","not-an-array","moduleName","className","funcName","incorrect-type","expectedType","classNameStr","incorrect-class","expectedClassName","isReturnValueProblem","missing-a-method","expectedMethod","add-to-cache-list-unexpected-type","entry","add-to-cache-list-conflicting-entries","firstEntry","secondEntry","plugin-error-request-will-fetch","thrownErrorMessage","invalid-cache-name","cacheNameId","unregister-route-but-not-found-with-method","unregister-route-route-not-registered","queue-replay-failed","name","duplicate-queue-name","expired-test-without-max-age","methodName","unsupported-route-type","not-array-of-class","expectedClass","max-entries-or-age-required","statuses-or-headers-required","invalid-string","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","unit-must-be-bytes","normalizedRangeHeader","single-range-only","invalid-range-values","no-range-header","range-not-satisfiable","size","start","end","attempt-to-cache-non-get-request","url","cache-put-with-no-response","no-response","message","bad-precaching-response","status","non-precached-url","add-to-cache-list-conflicting-integrities","missing-precache-entry","cacheName","cross-origin-copy-response","origin","opaque-streams-source","type","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","forEach","msg","err","reject","_catchHandler","catch","catchErr","matchResult","length","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","timeout","ms","resolve","setTimeout","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","stripParams","fullURL","ignoreParams","strippedURL","param","searchParams","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","assign","ignoreSearch","cacheKeys","cacheKey","strippedCacheKeyURL","Deferred","promise","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","originalRequest","hasCallback","clone","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","response","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","cachedResponse","effectiveRequest","getCacheKey","multiMatchOptions","caches","vary","headers","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","state","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","strategyStart","strategyName","printFinalResponse","NetworkOnly","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutPromise","race","skipWaiting","clientsClaim","clients","claim"],"mappings":"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4I,OAAO,CAAClE,GAAI,IAAG,GAChD,0DAAyD,GACzD,mDAAkD,CAAC;iBAC3D,MACI;kBACDjF,MAAM,CAACK,KAAK,CAAE,qBAAoB,IAAI,CAAC8I,OAAO,CAAClE,GAAI,IAAG,GACjD,8BAA6BgM,QAAQ,CAAC3L,MAAO,cAAa,GAC1D,wBAAuB,CAAC;;;;;;QAMjD,OAAOwM,eAAe;;IAE9B;;ICngBA;IACA;AACA;IACA;IACA;IACA;IACA;AACA,IAMA;IACA;IACA;IACA;IACA;IACA,MAAMc,QAAQ,CAAC;;IAEf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIxM,WAAWA,CAACsJ,OAAO,GAAG,EAAE,EAAE;;IAE9B;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAAChK,SAAS,GAAG6H,UAAU,CAACM,cAAc,CAAC6B,OAAO,CAAChK,SAAS,CAAC;;IAErE;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAACuK,OAAO,GAAGP,OAAO,CAACO,OAAO,IAAI,EAAE;;IAE5C;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAACe,YAAY,GAAGtB,OAAO,CAACsB,YAAY;;IAEhD;IACA;IACA;IACA;IACA;IACA;QACQ,IAAI,CAACxC,YAAY,GAAGkB,OAAO,CAAClB,YAAY;;;IAGhD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIjH,MAAMA,CAACmI,OAAO,EAAE;QACZ,MAAM,CAACmD,YAAY,CAAC,GAAG,IAAI,CAACC,SAAS,CAACpD,OAAO,CAAC;QAC9C,OAAOmD,YAAY;;;IAG3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MACIC,SAASA,CAACpD,OAAO,EAAE;;QAEf,IAAIA,OAAO,YAAYY,UAAU,EAAE;UAC/BZ,OAAO,GAAG;YA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"}